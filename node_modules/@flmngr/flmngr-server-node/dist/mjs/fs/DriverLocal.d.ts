/// <reference types="node" />
/// <reference types="node" />
import { ReadStream } from "fs";
export declare class DriverLocal {
    protected dir: string;
    protected isCacheDriver: boolean;
    private driverCache;
    constructor(dir: string, isCacheDriver?: boolean);
    setDriverCache(driverCache: DriverLocal): void;
    getDriverName(): string;
    getDir(): string;
    size(path: string): number;
    lastModified(path: string): number;
    makeDirectory(path: string): void;
    getRootDirName(): string;
    makeRootDir(): void;
    private static MAX_DEPTH;
    allDirectories(dirFrom: string, maxDepth: number): string[];
    private getDirs__fill;
    directories(path: string): string[];
    files(path: string): {
        name: string;
        mtime: number;
        size: number;
    }[];
    move(path: string, newName: string): void;
    getMimeType(path: string): string;
    exists(path: string): boolean;
    directoryExists(path: string): boolean;
    fileExists(path: string): boolean;
    get(path: string): Buffer;
    put(path: string, contents: Buffer | string): void;
    delete(path: string): void;
    private deleteFolderRecursiveSync;
    readStream(path: string): ReadStream;
    copyFile(pathSrc: string, pathDst: string): void;
    copyDirectory(src: string, dst: string): void;
    private uploadFile__getName;
    uploadFile(file: {
        data: Buffer;
        fileName: string;
    }, dir: string, isOverwrite: boolean): string;
}
//# sourceMappingURL=DriverLocal.d.ts.map